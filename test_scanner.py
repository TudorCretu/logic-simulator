"""Test the scanner module."""
import pytest
import os
from io import StringIO

from names import Names
from scanner import Scanner

test_file_dir = "test_definition_files"

@pytest.fixture
def new_definition_file():
    """Return a new instance of the Devices class."""
    new_names = Names()


def test_definition_file_1():
    """Test if definition_file_1 is scanned correctly."""
    names = Names()
    scanner = Scanner(os.path.join(test_file_dir, "test_model_1.txt"), names)
    assert scanner.get_symbol() == "DEVICES"
    assert scanner.get_symbol() == "SW1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW2"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW3"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW4"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "0"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "DTYPE"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "CK1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "CLOCK"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "2"
    assert scanner.get_symbol() == ";"

    assert scanner.get_symbol() == "CONNECTIONS"
    assert scanner.get_symbol() == "SW1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "XOR1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "I1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW2"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "XOR1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "I2"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "XOR1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "DATA"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "CK1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "CLK"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW3"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "SET"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW4"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "CLEAR"
    assert scanner.get_symbol() == ";"

    assert scanner.get_symbol() == "MONITORS"
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "Q"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "QBAR"
    assert scanner.get_symbol() == ";"

def test_definition_file_2():
    names = Names()
    scanner = Scanner(os.path.join(test_file_dir, "test_model_2.txt"), names)
    assert scanner.get_symbol() == "DEVICES"
    assert scanner.get_symbol() == "SW1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW2"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW3"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW4"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "SWITCH"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "0"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "DTYPE"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "CK1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "CLOCK"
    assert scanner.get_symbol() == "/"
    assert scanner.get_symbol() == "2"
    assert scanner.get_symbol() == ";"

    assert scanner.get_symbol() == "CONNECTIONS"
    assert scanner.get_symbol() == "SW1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "XOR1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "I1"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW2"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "XOR1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "I2"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "XOR1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "DATA"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "CK1"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "CLK"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW3"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "SET"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "SW4"
    assert scanner.get_symbol() == "="
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "CLEAR"
    assert scanner.get_symbol() == ";"

    assert scanner.get_symbol() == "MONITORS"
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "Q"
    assert scanner.get_symbol() == ","
    assert scanner.get_symbol() == "D1"
    assert scanner.get_symbol() == "."
    assert scanner.get_symbol() == "QBAR"
    assert scanner.get_symbol() == ";"
